NODE_ENV="development"
BUILD_ENV="development"

encryption {
  public_key: "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCRNdw0uzrDHjD/4VRn4RrI99yiVCVLA3769JYYuPy1V2xzrVWbAsy04GHp8ld6yvPMwtVkzqjW+HKx6pguguKFgyVQzqRHTjnqUhZ257z0SXFbC5umLsNQCtot/6zCHQX/w2GLTEVm1UXIxwD0/R7fdBXwnEFY2Jqpz3iSoM50lQIDAQAB",
  private_key: "MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAJE13DS7OsMeMP/hVGfhGsj33KJUJUsDfvr0lhi4/LVXbHOtVZsCzLTgYenyV3rK88zC1WTOqNb4crHqmC6C4oWDJVDOpEdOOepSFnbnvPRJcVsLm6Yuw1AK2i3/rMIdBf/DYYtMRWbVRcjHAPT9Ht90FfCcQVjYmqnPeJKgznSVAgMBAAECgYAljl6TrND34fkeVPL1ovzAeYqw2T6D9jWDRnsDjeSeKiw8htobK1Ayf84TKcCCW7dOgB2c4u48Gyne5iPR87wOEdjsD/CAJsplFS+mSxUUkU/Ne2/JBDA044auYQToSgEoDZf4J6rXnb1+Y1lTY7jCuuwvWZoC5YgoPFUUx5iHyQJBAO9SqFcptUgS2C/Iol+qUE688yGXgObo9OW+KTVzf7YSusqP+/M8ic0Ca9MHq+9ZFrG6JAbHF8CSyqhTMdOw63sCQQCbVE5B0tUX2GpArkHWd9ZrETftcMqho2yjeD2VKWGXeGN4G8A6NX09G5RHUVs457q/iRrSaeewhwOqSF7jU9svAkB1bL0kZ1aHUpe4el0RS2Oz/ondBZU9tzfSMgfOLimPkIkOMq+QnTeP24xEMxNtkOzNr2NV4AILfvrotElScRBZAkA19JH+gWruDonSD/XkttnvdRq1SuHIRgldu03A+4/f2rzKovEiBySKzoKyR0tlt/EByXFct9b4Vd3rD5qOYrmXAkEAmWOHoVmIQeCWutj4YBCn6ZzgoIKAHWe3u04G7l8pBkso36Dv3ZY41bl9XAgpc5rjmLsWoeBBpFI2kgAX6E4xJQ==",
  length: 1024,
  type: "RSA"
}

play_host= "http://localhost:9000"
play_port= 9000

mongo {
# me ndrru localhost ne 192.168.1.163 per subscribe
  host: "localhost"
  user: ""
  database: "training"
  password: ""
  auth_database: ""
  port = "27017"
}
batch_size = 10000

# If you deploy your application to several instances be sure to use the same key!
# play.http.secret.key="lp=H]MFH7_[hqpBuNb3erCn7[5aIY3C9@s]4=WnI_0w0hOKvI6wA882riVehVcuU"
play.http.secret.key= "changeme"

play.i18n.langs=["en"]

play.http.parser.maxDiskBuffer=128MB
play.http.parser.maxMemoryBuffer=16MB

# play mailer
play.mailer {
  host = "smtp.gmail.com" // (mandatory)
  port = 465 // (defaults to 25)
  ssl = yes // (defaults to no)
  tls = no // (defaults to no)
  tlsRequired = no // (defaults to no)
  user = "insert-email" // (optional)
  password = "insert-password" // (optional)
}

play.filters.gzip {

  contentType {

    # If non empty, then a response will only be compressed if its content type is in this list.
    whiteList = [ "application/javascript", "application/json" ]

    # The black list is only used if the white list is empty.
    # Compress all responses except the ones whose content type is in this list.
    blackList = []
  }
}

play.filters.enabled += "play.filters.gzip.GzipFilter"
play.filters.enabled += "play.filters.hosts.AllowedHostsFilter"
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.disabled += "play.filters.csrf.CSRFFilter"

play.http.actionComposition.controllerAnnotationsFirst = true

play.cache.bindCaches = ["training"]

play.cache.createBoundCaches = false
play.cache.redis {
  # redis host
  host:       127.0.0.1

  # redis server: port
  port:       6379
  # redis server: database number (optional)
  database:   4
  # authentication password (optional)
  password:   null #"redis_rocks!"

  # do not bind default unqualified APIs
  bind-default: false

  # name of the instance in simple configuration,
  # i.e., not located under `instances` key
  # but directly under 'play.cache.redis'
  default-cache: "redis"
}

akka {
  log-config-on-start = off
  http: {
    client {
      idle-timeout = 120 s
    }
    host-connection-pool {
      idle-timeout = 150 s
    }
  }
  actor {
    default-dispatcher {
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 8

        # based on factor the paralelism becomes: factor * nr of cpu-s
        parallelism-factor = 4

        # default 64
        parallelism-max = 64
      }
    }
  }
}

db {}

# Executors
single-threaded {
  type = Dispatcher
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = 1 # db conn pool (50) + number of cores (4) + housekeeping (1)
  }
}


mongo-executor {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 10 # db conn pool (8) + number of cores (1) + housekeeping (1)
  }
}